package LLM.Apis.Ollama

import com.intellij.util.containers.stream
import kotlinx.datetime.Instant
import kotlinx.serialization.json.Json
import org.filomilo.AiTestGenerator.LLM.Apis.Ollama.OllamaGenerateResponse
import org.junit.jupiter.api.Assertions.*
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.TestInstance
import org.junit.jupiter.params.ParameterizedTest
import org.junit.jupiter.params.provider.Arguments
import org.junit.jupiter.params.provider.MethodSource
import org.junit.jupiter.params.provider.ValueSource
import java.util.stream.Stream

@TestInstance(TestInstance.Lifecycle.PER_CLASS)
class OllamaGenerateResponseTest {

    val json = """
            {
                "model": "llava",
                "created_at": "2025-08-02T12:00:02.166859586Z",
                "response": " The image shows a group of people standing together, with one individual holding up what appears to be a device or object. It looks like they could be attending an event or gathering, and the atmosphere seems friendly and casual. ",
                "done": true,
                "done_reason": "stop",
                "context": [733, 16289, 28793, 1824, 349, 297, 456, 5754, 28804, 733, 28748, 16289, 28793, 415, 3469, 4370, 264, 2071, 302, 905, 6328, 2553, 28725, 395, 624, 3235, 6632, 582, 767, 8045, 298, 347, 264, 3895, 442, 1928, 28723, 661, 4674, 737, 590, 829, 347, 19735, 396, 1951, 442, 17243, 28725, 304, 272, 13789, 3969, 10131, 304, 13316, 28723, 28705],
                "total_duration": 74099932065,
                "load_duration": 48240035762,
                "prompt_eval_count": 14,
                "prompt_eval_duration": 7229423002,
                "eval_count": 46,
                "eval_duration": 18594839268
            }
        """.trimIndent()
    val ExpectedValue: OllamaGenerateResponse = OllamaGenerateResponse(
        model = "llava",
        created_at = Instant.parse("2025-08-02T12:00:02.166859586Z"),
        response = " The image shows a group of people standing together, with one individual holding up what appears to be a device or object. It looks like they could be attending an event or gathering, and the atmosphere seems friendly and casual. ",
        done = true,
        done_reason = "stop",
        context = arrayOf(
            733,
            16289,
            28793,
            1824,
            349,
            297,
            456,
            5754,
            28804,
            733,
            28748,
            16289,
            28793,
            415,
            3469,
            4370,
            264,
            2071,
            302,
            905,
            6328,
            2553,
            28725,
            395,
            624,
            3235,
            6632,
            582,
            767,
            8045,
            298,
            347,
            264,
            3895,
            442,
            1928,
            28723,
            661,
            4674,
            737,
            590,
            829,
            347,
            19735,
            396,
            1951,
            442,
            17243,
            28725,
            304,
            272,
            13789,
            3969,
            10131,
            304,
            13316,
            28723,
            28705
        ).toList(),
        total_duration = 74099932065,
        load_duration = 48240035762,
        prompt_eval_count = 14,
        prompt_eval_duration = 7229423002,
        eval_count = 46,
        eval_duration = 18594839268
    )



    val noExepctionJsonStrings: Array<String> = arrayOf(
json,
        """
            {
                "context": [
                    105,
                    2364,
                    107,
                    6924,
                    730,
                    6805,
                    236810,
                    573,
                    1292,
                    1237,
                    2002,
                    801,
                    1138,
                    236769,
                    15798,
                    236764,
                    720,
                    236763,
                    2526,
                    251,
                    107,
                    144,
                    2060,
                    496,
                    900,
                    518,
                    236793,
                    251,
                    107,
                    140,
                    236783,
                    106,
                    107,
                    105,
                    4368,
                    107,
                    2717,
                    3580,
                    107,
                    1106,
                    4064,
                    236761,
                    2349,
                    236761,
                    2501,
                    236761,
                    3898,
                    236746,
                    236793,
                    108,
                    2153,
                    1012,
                    6400,
                    642,
                    108,
                    140,
                    5673,
                    107,
                    141,
                    236829,
                    86511,
                    1156,
                    25630,
                    3075,
                    236761,
                    107,
                    141,
                    236829,
                    107,
                    141,
                    236829,
                    1392,
                    2882,
                    496,
                    669,
                    1171,
                    11995,
                    236761,
                    107,
                    141,
                    236829,
                    1392,
                    2882,
                    518,
                    669,
                    1855,
                    11995,
                    236761,
                    107,
                    141,
                    236829,
                    1392,
                    2060,
                    669,
                    2324,
                    529,
                    496,
                    532,
                    518,
                    236761,
                    107,
                    141,
                    6744,
                    107,
                    140,
                    2153,
                    2002,
                    801,
                    1138,
                    236769,
                    3898,
                    236746,
                    496,
                    236764,
                    4333,
                    236746,
                    518,
                    236768,
                    642,
                    107,
                    144,
                    2060,
                    496,
                    900,
                    518,
                    236793,
                    107,
                    140,
                    236783,
                    108,
                    140,
                    2153,
                    2002,
                    2325,
                    1689,
                    236769,
                    1859,
                    3805,
                    6383,
                    236768,
                    642,
                    107,
                    144,
                    715,
                    14691,
                    14120,
                    107,
                    144,
                    720,
                    1354,
                    578,
                    1138,
                    236769,
                    236770,
                    236771,
                    236764,
                    236743,
                    236778,
                    236771,
                    626,
                    107,
                    144,
                    4521,
                    236761,
                    725,
                    236761,
                    4629,
                    885,
                    818,
                    2324,
                    529,
                    236743,
                    236770,
                    236771,
                    532,
                    236743,
                    236778,
                    236771,
                    563,
                    236787,
                    623,
                    900,
                    1354,
                    626,
                    138,
                    715,
                    16887,
                    236787,
                    236743,
                    236800,
                    236771,
                    107,
                    140,
                    236783,
                    107,
                    236783,
                    107,
                    2717,
                    108,
                    1018,
                    44008,
                    53121,
                    108,
                    236829,
                    5213,
                    236929,
                    1106,
                    4064,
                    236761,
                    2349,
                    236761,
                    2501,
                    236761,
                    3898,
                    236746,
                    236793,
                    236929,
                    66515,
                    138,
                    2094,
                    1757,
                    23163,
                    506,
                    2165,
                    3898,
                    236746,
                    236929,
                    10828,
                    7937,
                    236761,
                    138,
                    8409,
                    506,
                    3303,
                    1292,
                    14187,
                    4038,
                    236789,
                    236745,
                    808,
                    11106,
                    236829,
                    614,
                    14481,
                    2165,
                    3898,
                    236746,
                    236929,
                    7937,
                    236764,
                    625,
                    236789,
                    236751,
                    6816,
                    1535,
                    5428,
                    531,
                    3204,
                    625,
                    1056,
                    2844,
                    607,
                    5151,
                    600,
                    4242,
                    506,
                    2165,
                    3898,
                    236746,
                    236929,
                    1722,
                    236761,
                    138,
                    902,
                    672,
                    1624,
                    236764,
                    625,
                    236789,
                    236751,
                    496,
                    1535,
                    5428,
                    531,
                    2514,
                    506,
                    7937,
                    8514,
                    573,
                    122499,
                    236761,
                    107,
                    236829,
                    5213,
                    236929,
                    2153,
                    2002,
                    801,
                    1138,
                    236769,
                    3898,
                    236746,
                    496,
                    236764,
                    4333,
                    236746,
                    518,
                    54557,
                    66515,
                    1174,
                    23669,
                    506,
                    2165,
                    1282,
                    236929,
                    1292,
                    236787,
                    107,
                    140,
                    236829,
                    5213,
                    236929,
                    2153,
                    236929,
                    66515,
                    138,
                    114526,
                    506,
                    1292,
                    15283,
                    699,
                    14027,
                    236761,
                    107,
                    140,
                    236829,
                    5213,
                    236929,
                    6990,
                    236929,
                    66515,
                    138,
                    157847,
                    506,
                    1292,
                    531,
                    577,
                    2760,
                    2180,
                    7107,
                    614,
                    5705,
                    529,
                    506,
                    2165,
                    7765,
                    236929,
                    1012,
                    236761,
                    138,
                    2094,
                    563,
                    6684,
                    1547,
                    506,
                    1292,
                    4038,
                    236789,
                    236745,
                    18039,
                    580,
                    1027,
                    2495,
                    531,
                    577,
                    4464,
                    531,
                    13707,
                    236761,
                    107,
                    140,
                    236829,
                    5213,
                    236929,
                    720,
                    236929,
                    66515,
                    84315,
                    600,
                    506,
                    1292,
                    7623,
                    614,
                    11995,
                    1550,
                    236761,
                    107,
                    140,
                    236829,
                    5213,
                    236929,
                    1282,
                    236929,
                    66515,
                    669,
                    1463,
                    529,
                    506,
                    1292,
                    236761,
                    107,
                    140,
                    236829,
                    5213,
                    179914,
                    3898,
                    236746,
                    496,
                    236764,
                    4333,
                    236746,
                    518,
                    54557,
                    66515,
                    138,
                    2094,
                    563,
                    506,
                    1292,
                    236789,
                    236751,
                    7689,
                    1694,
                    236761,
                    1030,
                    4716,
                    1156,
                    12130,
                    7489,
                    2165,
                    236746,
                    236929,
                    532,
                    2165,
                    236763,
                    8347,
                    1800,
                    529,
                    837,
                    659,
                    529,
                    1722,
                    2165,
                    3898,
                    236746,
                    21233,
                    138,
                    818,
                    2165,
                    3898,
                    236746,
                    236929,
                    1722,
                    563,
                    496,
                    17709,
                    573,
                    506,
                    5396,
                    1262,
                    1722,
                    611,
                    236789,
                    859,
                    1161,
                    236761,
                    108,
                    1018,
                    3503,
                    76423,
                    528,
                    219213,
                    236743,
                    236810,
                    53121,
                    108,
                    236829,
                    5213,
                    236929,
                    2153,
                    2002,
                    236929,
                    66515,
                    3143,
                    30154,
                    25319,
                    600,
                    506,
                    1292,
                    563,
                    236787,
                    107,
                    140,
                    236829,
                    5213,
                    236929,
                    2153,
                    236929,
                    66515,
                    138,
                    162039,
                    699,
                    14027,
                    236761,
                    107,
                    140,
                    236829,
                    5213,
                    236929,
                    6990,
                    236929,
                    66515,
                    138,
                    8574,
                    577,
                    2760,
                    2180,
                    7107,
                    614,
                    5705,
                    529,
                    506,
                    1012,
                    236761,
                    107,
                    236829,
                    5213,
                    236929,
                    2060,
                    496,
                    900,
                    518,
                    236793,
                    236929,
                    66515,
                    138,
                    2094,
                    563,
                    506,
                    7157,
                    13179,
                    529,
                    506,
                    1292,
                    236761,
                    1030,
                    5181,
                    13586,
                    506,
                    1156,
                    25630,
                    2165,
                    236746,
                    236929,
                    532,
                    2165,
                    236763,
                    236929,
                    532,
                    7623,
                    506,
                    1354,
                    236761,
                    107,
                    236829,
                    5213,
                    236929,
                    3241,
                    236929,
                    1996,
                    53121,
                    669,
                    2165,
                    3241,
                    236929,
                    1996,
                    563,
                    506,
                    7234,
                    1523,
                    529,
                    822,
                    219213,
                    236743,
                    236810,
                    1594,
                    1012,
                    236761,
                    138,
                    1509,
                    236789,
                    236751,
                    1298,
                    611,
                    236789,
                    859,
                    2247,
                    822,
                    1594,
                    3393,
                    236761,
                    108,
                    1018,
                    2021,
                    1845,
                    672,
                    219213,
                    236743,
                    236810,
                    1594,
                    53121,
                    108,
                    236770,
                    236761,
                    5213,
                    14000,
                    53121,
                    18898,
                    506,
                    3393,
                    618,
                    2165,
                    7765,
                    236761,
                    3580,
                    21233,
                    107,
                    236778,
                    236761,
                    5213,
                    27407,
                    53121,
                    7607,
                    496,
                    12612,
                    653,
                    4991,
                    11172,
                    532,
                    25774,
                    506,
                    3393,
                    236787,
                    107,
                    139,
                    2717,
                    42422,
                    107,
                    139,
                    187186,
                    6400,
                    236761,
                    3580,
                    107,
                    139,
                    2717,
                    107,
                    236800,
                    236761,
                    5213,
                    7306,
                    53121,
                    138,
                    7306,
                    506,
                    28725,
                    1012,
                    236787,
                    107,
                    139,
                    2717,
                    42422,
                    107,
                    139,
                    3580,
                    6400,
                    107,
                    139,
                    2717,
                    108,
                    3048,
                    1374,
                    1460,
                    506,
                    3938,
                    236787,
                    108,
                    2717,
                    107,
                    818,
                    2324,
                    529,
                    236743,
                    236770,
                    236771,
                    532,
                    236743,
                    236778,
                    236771,
                    563,
                    236787,
                    236743,
                    236800,
                    236771,
                    107,
                    2717,
                    108,
                    1018,
                    12703,
                    5803,
                    568,
                    1071,
                    1138,
                    531,
                    506,
                    2165,
                    7765,
                    236929,
                    1012,
                    1473,
                    1018,
                    108,
                    2717,
                    3580,
                    107,
                    1106,
                    3447,
                    236761,
                    11883,
                    236761,
                    3694,
                    236793,
                    107,
                    1106,
                    2002,
                    3447,
                    236761,
                    11883,
                    236761,
                    22042,
                    236761,
                    47409,
                    236793,
                    108,
                    2153,
                    1012,
                    6400,
                    3694,
                    642,
                    107,
                    140,
                    236940,
                    3694,
                    107,
                    140,
                    2153,
                    2002,
                    2325,
                    1594,
                    3218,
                    825,
                    642,
                    107,
                    144,
                    47409,
                    236769,
                    236800,
                    236771,
                    236764,
                    1138,
                    236769,
                    236770,
                    236771,
                    236764,
                    236743,
                    236778,
                    236771,
                    2697,
                    107,
                    140,
                    236783,
                    107,
                    236783,
                    107,
                    2717,
                    108,
                    2094,
                    1594,
                    1012,
                    23669,
                    496,
                    1996,
                    2760,
                    2165,
                    2181,
                    3218,
                    236929,
                    600,
                    6097,
                    506,
                    1594,
                    1624,
                    236761,
                    138,
                    1509,
                    6178,
                    219213,
                    236789,
                    236751,
                    2165,
                    47409,
                    236929,
                    531,
                    2426,
                    768,
                    506,
                    3938,
                    529,
                    2165,
                    1282,
                    236769,
                    236770,
                    236771,
                    236764,
                    236743,
                    236778,
                    236771,
                    54557,
                    563,
                    4745,
                    531,
                    2165,
                    236800,
                    236771,
                    21233,
                    138,
                    2094,
                    104755,
                    600,
                    506,
                    1292,
                    4146,
                    15195,
                    236761,
                    107
                ],
                "created_at": "2025-09-02T08:34:06.83607894Z",
                "done": true,
                "done_reason": "stop",
                "eval_count": 820,
                "eval_duration": 578115000048,
                "load_duration": 1908011720,
                "model": "gemma3:1b",
                "prompt_eval_count": 37,
                "prompt_eval_duration": 4585839979,
                "response": "```java\nimport java.util.function.Inta;\n\npublic class Main {\n\n    /**\n     * Adds two integers together.\n     *\n     * @param a The first integer.\n     * @param b The second integer.\n     * @return The sum of a and b.\n     */\n    public static int add(Inta a, Inta b) {\n        return a + b;\n    }\n\n    public static void main(String[] args) {\n        // Example usage\n        int result = add(10, 20);\n        System.out.println(\"The sum of 10 and 20 is: \" + result);  // Output: 30\n    }\n}\n```\n\n**Explanation:**\n\n* **`import java.util.function.Inta;`**:  This line imports the `Inta` functional interface.  While the original function signature doesn't *require* an explicit `Inta` interface, it's generally good practice to include it when working with functions that accept the `Inta` type.  In this case, it's a good practice to keep the interface definition for readability.\n* **`public static int add(Inta a, Inta b)`**: This defines the `add` function:\n    * **`public`**:  Makes the function accessible from anywhere.\n    * **`static`**:  Allows the function to be called without creating an instance of the `Main` class.  This is useful because the function doesn't rely on any object to be created to execute.\n    * **`int`**: Specifies that the function returns an integer value.\n    * **`add`**: The name of the function.\n    * **`(Inta a, Inta b)`**:  This is the function's parameter list. It takes two arguments named `a` and `b`, both of which are of type `Inta`.  The `Inta` type is a placeholder for the actual data type you'll use.\n\n**Key Concepts in JUnit 5:**\n\n* **`public static`**: These keywords declare that the function is:\n    * **`public`**:  Accessible from anywhere.\n    * **`static`**:  Can be called without creating an instance of the class.\n* **`return a + b;`**:  This is the core logic of the function. It simply adds the two integers `a` and `b` and returns the result.\n* **`main` method:** The `main` method is the entry point of your JUnit 5 test class.  It's where you'll put your test code.\n\n**To run this JUnit 5 test:**\n\n1. **Save:** Save the code as `Main.java`.\n2. **Compile:** Open a terminal or command prompt and compile the code:\n   ```bash\n   javac Main.java\n   ```\n3. **Run:**  Run the compiled class:\n   ```bash\n   java Main\n   ```\n\nYou should see the output:\n\n```\nThe sum of 10 and 20 is: 30\n```\n\n**Example Test (to add to the `Main` class):**\n\n```java\nimport org.junit.Test;\nimport static org.junit.Assert.assertEquals;\n\npublic class MainTest {\n    @Test\n    public static void testAdd() {\n        assertEquals(30, add(10, 20));\n    }\n}\n```\n\nThis test class defines a method called `testAdd` that contains the test case.  It uses JUnit's `assertEquals` to check if the output of `add(10, 20)` is equal to `30`.  This verifies that the function works correctly.\n",
                "total_duration": 584619868701
            }
        """.trimIndent(),
        "{\"model\":\"gemma3:1b\",\"created_at\":\"2025-09-02T16:43:10.733065967Z\",\"response\":\"```java\\nimport java.util.function.ToInt;\\n\\npublic class Solution {\\n\\n    /**\\n     * Adds two integers.\\n     *\\n     * @param a The first integer.\\n     * @param b The second integer.\\n     * @return The sum of a and b.\\n     */\\n    public static int add(ToInt a,ToInt b) {\\n        return a + b;\\n    }\\n\\n\\n    public static void main(String[] args) {\\n        // Example Usage (for testing)\\n        int result = add(5, 3);\\n        System.out.println(\\\"The sum of 5 and 3 is: \\\" + result); // Output: The sum of 5 and 3 is: 8\\n    }\\n}\\n```\\n\\n**Explanation:**\\n\\n1. **`import java.util.function.ToInt;`**: This line imports the `ToInt` class from the `java.util.function` package.  The `ToInt` class is used to create a functional interface that accepts an `int` argument and returns an `int` result. This makes the code more readable and maintainable by clearly specifying the input type.\\n\\n2. **`public static int add(ToInt a,ToInt b)`**: This declares the function named `add`.\\n   - `public static`:  This means the function can be accessed from anywhere, and it doesn't require an object of the class to be called.\\n   - `int`: Specifies that the function returns an integer value.\\n   - `add`: The name of the function.\\n   - `ToInt a,ToInt b`: This is a *functional interface*.  It defines a function signature that takes two `ToInt` arguments (`a` and `b`) and returns an `int` result.  It's a way to define a function with a specific input/output type.\\n\\n3. **`return a + b;`**:  This is the core logic of the function. It simply returns the sum of the two input integers.\\n\\n4. **`main(String[] args)`**: This is a standard `main` method that serves as a starting point for testing the `add` function.\\n\\n5. **`int result = add(5, 3);`**: This is a demonstration of how to call the function and store the returned value in a variable named `result`.\\n\\n6.  **`System.out.println(\\\"The sum of 5 and 3 is: \\\" + result);`**:  This line prints the result to the console.\\n\\n**Why use a Functional Interface?**\\n\\n- **Readability:** It makes the code clearer by clearly defining the function's intent.\\n- **Testability:** It's easier to write unit tests for functions that accept specific input types.\\n- **Abstraction:** It hides the implementation details of the `add` function, allowing you to change the implementation of the `add` function without affecting other parts of the code that use it.\\n\\n**How to Compile and Run (using Maven):**\\n\\n1.  **Save:** Save the code as `Solution.java`.\\n\\n2.  **Compile:** Open a terminal or command prompt and navigate to the directory where you saved the file.  Compile the code using:\\n    ```bash\\n    javac Solution.java\\n    ```\\n\\n3.  **Run:**  Run the compiled code using:\\n    ```bash\\n    java Solution\\n    ```\\n\\nThis will print the output:\\n\\n```\\nThe sum of 5 and 3 is: 8\\n```\\n\",\"done\":true,\"done_reason\":\"stop\",\"context\":[105,2364,107,6924,730,6805,236810,573,1292,1237,2002,801,1138,236769,15798,236764,720,236763,2526,251,107,144,2060,496,900,518,236793,251,107,140,236783,106,107,105,4368,107,2717,3580,107,1106,4064,236761,2349,236761,2501,236761,50213,236793,108,2153,1012,23130,642,108,140,5673,107,141,236829,86511,1156,25630,236761,107,141,236829,107,141,236829,1392,2882,496,669,1171,11995,236761,107,141,236829,1392,2882,518,669,1855,11995,236761,107,141,236829,1392,2060,669,2324,529,496,532,518,236761,107,141,6744,107,140,2153,2002,801,1138,236769,50213,496,236764,50213,518,236768,642,107,144,2060,496,900,518,236793,107,140,236783,109,140,2153,2002,2325,1689,236769,1859,3805,6383,236768,642,107,144,715,14691,42056,568,1708,7257,236768,107,144,720,1354,578,1138,236769,236810,236764,236743,236800,626,107,144,4521,236761,725,236761,4629,885,818,2324,529,236743,236810,532,236743,236800,563,236787,623,900,1354,626,973,16887,236787,669,2324,529,236743,236810,532,236743,236800,563,236787,236743,236828,107,140,236783,107,236783,107,2717,108,1018,44008,53121,108,236770,236761,5213,236929,1106,4064,236761,2349,236761,2501,236761,50213,236793,236929,66515,1174,1757,23163,506,2165,50213,236929,1012,699,506,2165,3580,236761,2349,236761,2501,236929,8289,236761,138,818,2165,50213,236929,1012,563,1456,531,2619,496,10828,7937,600,37574,614,2165,720,236929,8485,532,7623,614,2165,720,236929,1354,236761,1174,3590,506,3393,919,61860,532,4883,742,684,8207,49643,506,2744,1722,236761,108,236778,236761,5213,236929,2153,2002,801,1138,236769,50213,496,236764,50213,518,54557,66515,1174,64278,506,1292,7489,2165,1282,21233,107,139,236772,2165,2153,2002,75118,138,2094,2820,506,1292,740,577,34961,699,14027,236764,532,625,4038,236789,236745,1660,614,2495,529,506,1012,531,577,2760,236761,107,139,236772,2165,720,75118,84315,600,506,1292,7623,614,11995,1550,236761,107,139,236772,2165,1282,75118,669,1463,529,506,1292,236761,107,139,236772,2165,50213,496,236764,50213,518,75118,1174,563,496,808,46990,7937,22429,138,1509,23669,496,1292,14187,600,4716,1156,2165,50213,236929,12130,20442,236746,236929,532,2165,236763,18833,532,7623,614,2165,720,236929,1354,236761,138,1509,236789,236751,496,1595,531,8540,496,1292,607,496,3530,2744,236786,4606,1722,236761,108,236800,236761,5213,236929,2060,496,900,518,236793,236929,66515,138,2094,563,506,7157,13179,529,506,1292,236761,1030,5181,7623,506,2324,529,506,1156,2744,25630,236761,108,236812,236761,5213,236929,3241,236769,1859,3805,6383,54557,66515,1174,563,496,4077,2165,3241,236929,1996,600,14736,618,496,6250,1523,573,7257,506,2165,1282,236929,1292,236761,108,236810,236761,5213,236929,720,1354,578,1138,236769,236810,236764,236743,236800,626,236929,66515,1174,563,496,29528,529,1217,531,2246,506,1292,532,4762,506,8323,1550,528,496,6471,7489,2165,3709,21233,108,236825,236761,138,1018,236929,4521,236761,725,236761,4629,885,818,2324,529,236743,236810,532,236743,236800,563,236787,623,900,1354,626,236929,66515,138,2094,1757,24482,506,1354,531,506,3554,236761,108,1018,11355,1161,496,53578,40309,236881,1018,108,236772,5213,6190,2109,53121,1030,3590,506,3393,54724,684,8207,23906,506,1292,236789,236751,9703,236761,107,236772,5213,3694,2109,53121,1030,236789,236751,8722,531,4903,4360,7713,573,5151,600,4242,3530,2744,4458,236761,107,236772,5213,178243,53121,1030,65896,506,8688,4889,529,506,2165,1282,236929,1292,236764,10678,611,531,2352,506,8688,529,506,2165,1282,236929,1292,2180,21574,1032,4688,529,506,3393,600,1161,625,236761,108,1018,3910,531,114815,532,9793,568,3091,108953,1473,1018,108,236770,236761,138,1018,14000,53121,18898,506,3393,618,2165,15607,236761,3580,21233,108,236778,236761,138,1018,27407,53121,7607,496,12612,653,4991,11172,532,21332,531,506,12229,1298,611,10683,506,2129,236761,138,27407,506,3393,1699,236787,107,140,2717,42422,107,140,187186,23130,236761,3580,107,140,2717,108,236800,236761,138,1018,7306,53121,138,7306,506,28725,3393,1699,236787,107,140,2717,42422,107,140,3580,23130,107,140,2717,108,2094,795,1887,506,3938,236787,108,2717,107,818,2324,529,236743,236810,532,236743,236800,563,236787,236743,236828,107,2717,107],\"total_duration\":316645454110,\"load_duration\":2401236279,\"prompt_eval_count\":37,\"prompt_eval_duration\":6630349462,\"eval_count\":754,\"eval_duration\":307610760648}"
    )


    private fun provideStringsForEncode(): Stream<Arguments?> {
        return noExepctionJsonStrings.map { x-> Arguments.of(x) }.stream()
    }

        //    @Disabled("temporaryl")
    @Test
    fun testToString() {
        assertEquals(ExpectedValue, Json.decodeFromString<OllamaGenerateResponse>(json))
    }

    @ParameterizedTest
    @MethodSource("provideStringsForEncode")
    fun decodeNoExcception(json: String) {
        var ollamaResponse: OllamaGenerateResponse?=null
        assertDoesNotThrow {
            ollamaResponse =  Json.decodeFromString<OllamaGenerateResponse>(json)}
        assertNotNull(ollamaResponse)
    }

}